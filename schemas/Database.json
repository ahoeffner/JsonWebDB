{
   "type": "object",
   "$id": "Database.json",
   "$schema": "https://json-schema.org/draft/2020-12/schema",

   "title": "Database-schema",
   "description": "This schema defines the different types of database objects ie Table, SQL, Procedure and Function",

   "additionalProperties": false,

   "properties":
   {
      "database":
      {
         "type": "array",
         "items":
         {
            "anyOf":
            [
               {"$ref": "#/sources/SQL"},
               {"$ref": "#/sources/Table"},
               {"$ref": "#/sources/Function"}
            ]
         }
      }
   }
   ,
   "sources":
   {
      "Table":
      {
         "type": "object",
         "additionalProperties": false,
         "required": ["id","insert","update","delete","select"],

         "description": "The source object (table,view or query)",

         "properties":
         {
            "id":
            {
               "type": "string",
               "description": "This is what is used to reference the object"
            }
            ,
            "object":
            {
               "type": "string",
               "description": "The name of the database object ie. table, view, or query"
            }
            ,
            "query":
            {
               "$ref": "#/types/Query",
               "description": "Use this query as base for select statements (not for DML)"
            }
            ,
            "order":
            {
               "type": "string",
               "description": "The default 'order by' clause"
            }
            ,
            "primary-key":
            {
               "oneOf":
               [
                  {"type": "string"},
                  {"type": "array", "items": {"type": "string"}}
               ]
               ,
               "description": "If not present, it will be looked up from the database"
            }
            ,
            "custom-filters":
            {
               "type": "array",
               "items": {"$ref": "#/types/CustomFilter"},
               "description": "Defines custom filters, to be used on this datasource"
            }
            ,
            "vpd":
            {
               "$ref": "#/types/VPD",
               "description": "Defines a custom filter that emulates a virtual private database "
            }
            ,
            "insert":
            {
               "$ref": "#/types/Access",
               "description": "Access definition for this operation"
            }
            ,
            "update":
            {
               "$ref": "#/types/Access",
               "description": "Access definition for this operation"
            }
            ,
            "delete":
            {
               "$ref": "#/types/Access",
               "description": "Access definition for this operation"
            }
            ,
            "select":
            {
               "$ref": "#/types/Access",
               "description": "Access definition for this operation"
            }
         }
      }
      ,
      "SQL":
      {
         "type": "object",
         "additionalProperties": false,
         "required": ["id","sql"],

         "description": "Any sql statement",

         "properties":
         {
            "id":
            {
               "type": "string",
               "description": "This is what is used to reference the sql definition"
            },
            "sql":
            {
               "$ref": "#/types/Text",
               "description": "sql statement"
            },
            "update":
            {
               "type": "boolean",
               "description": "Does the sql update data in the database (only execute)"
            },
            "cursor":
            {
               "type": "boolean",
               "description": "Keep cursor for subsequent fetch (only select)"
            },
            "datatypes":
            {
               "object": "array",
               "items": {"$ref": "#/types/DataType"},
               "description": "All bindvalues must be defined"
            }
         }
      }
      ,
      "Function":
      {
         "type": "object",
         "additionalProperties": false,
         "required": ["id","execute"],

         "description": "Execute function",

         "properties":
         {
            "id":
            {
               "type": "string",
               "description": "This is what is used to reference the function definition"
            },
            "update":
            {
               "type": "boolean",
               "description": "Does the function update data in the database"
            },
            "execute":
            {
               "type": "string",
               "description": "The function/procedure call"
            },
            "variables":
            {
               "object": "array",
               "items": {"$ref": "#/types/Variable"}
            }
         }
      }
   }
   ,
   "types":
   {
      "Query":
      {
         "type": "object",
         "required": ["sql"],
         "additionalProperties": false,

         "properties":
         {
            "sql":
            {
               "$ref": "#/types/Text",
               "description": "select statement"
            },
            "datatypes":
            {
               "object": "array",
               "items": {"$ref": "#/types/DataType"},
               "description": "All bindvalues must be defined. As the query has not been parsed at this stage"
            }
         }
      }
      ,
      "DataType":
      {
         "type": "object",
         "required": ["name","type"],
         "additionalProperties": false,

         "properties":
         {
            "name": {"type": "string"},
            "type": {"$ref": "#/types/SQLType"}
         }
      }
      ,
      "Variable":
      {
         "type": "object",
         "required": ["name","type"],
         "additionalProperties": false,

         "properties":
         {
            "name": {"type": "string"},
            "type": {"$ref": "#/types/SQLType"},
            "out" : {"type": "boolean"}
         }
      }
      ,
      "CustomFilter":
      {
         "type": "object",
         "additionalProperties": false,
         "required": ["name","where-clause"],

         "properties":
         {
            "name": {"type": "string"},
            "description": {"$ref": "#/types/Text"},
            "where-clause": {"$ref": "#/types/Text"},
            "datatypes": {"object": "array", "items": {"$ref": "#/types/DataType"}}
         }
      }
      ,
      "VPD":
      {
         "type": "object",
         "additionalProperties": false,
         "required": ["where-clause","apply"],

         "properties":
         {
            "description": {"$ref": "#/types/Text"},
            "where-clause": {"$ref": "#/types/Text"},
            "datatypes": {"object": "array", "items": {"$ref": "#/types/DataType"}},
            "apply":{"type": "array", "items": {"$ref": "#/types/TableOperation"}}
         }
      }
      ,
      "TableOperation":
      {
         "type": "string",
         "enum": ["insert","update","delete","select"]
      }
      ,
      "Access":
      {
         "type": "string",
         "enum": ["denied","allowed","if-where-clause","by-primary-key"]
      }
      ,
      "SQLType":
      {
         "type": ["integer", "string"],
         "description": "Either the datatype as in varchar, numeric... or the jdbc Types id"
      }
      ,
      "Text":
      {
         "oneOf":
         [
            {"type": "string"},
            {"type": "array", "items": {"type": "string"}}
         ]
      }
      ,
      "List":
      {
         "oneOf":
         [
            {"type": "string"},
            {"type": "array", "items": {"type": "string"}}
         ]
      }
   }
}